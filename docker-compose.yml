version: '3.8'

services:
  vllm-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vllm-poc
    ports:
      - "8000:8000"
    environment:
      - MODEL_NAME=${MODEL_NAME:-microsoft/DialoGPT-medium}
      - HOST=0.0.0.0
      - PORT=8000
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-0}
    env_file:
      - .env
    volumes:
      # Mount HuggingFace cache to persist model downloads
      - huggingface_cache:/home/vllm/.cache/huggingface
      # Optional: mount custom models directory
      - ./models:/app/models:ro
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: vllm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: vllm-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    profiles:
      - monitoring

volumes:
  huggingface_cache:
  prometheus_data:
  grafana_data: